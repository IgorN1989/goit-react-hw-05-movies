{"version":3,"file":"static/js/645.08a16bef.chunk.js","mappings":"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","sources":["api/movie-api.js","components/ErrorMessage/ErrorMessage.styled.jsx","components/MoviesList/MoviesList.styled.jsx","components/MoviesListItem/MoviesListItem.styled.jsx","components/MoviesListItem/MoviesListItem.js","components/MoviesList/MoviesList.js","components/Titles/Titles.styled.jsx","pages/Home.js"],"sourcesContent":["import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst TRENDING_MOVIES = 'trending/movie/day?language=en-US';\nconst SEARCH_MOVIES = 'search/movie';\nconst MOVIE_DETAILS = 'movie/';\nconst MOVIE_CREDITS = '/credits';\nconst MOVIE_REVIEWS = '/reviews';\n\nconst BEARER_TOKEN =\n  'eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJhZjNjMmYyYjdlODliNjk1MWFmZTJkNTZiMzY0NDQxMiIsInN1YiI6IjY0ZjM4NTJiNzAwYmY3MDEwMDQxZTZjNCIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.SDu7HaY5RLjgocbsSUGvk676JW6hJoLSQrFdUOrgIWs';\n// const API_KEY = 'af3c2f2b7e89b6951afe2d56b3644412';\n\nconst axiosTMDB = axios.create();\naxiosTMDB.defaults.baseURL = BASE_URL;\naxiosTMDB.defaults.headers.common['Authorization'] = `Bearer ${BEARER_TOKEN}`;\n\nexport async function fetchTrendingMovies() {\n  const response = await axiosTMDB.get(TRENDING_MOVIES);\n  return response.data;\n}\n\nexport async function fetchSearchMovies(movie, page) {\n  const response = await axiosTMDB.get(\n    `${SEARCH_MOVIES}?query=${movie}&page=${page}`\n  );\n  return response.data;\n}\n\nexport async function fetchMovieDetails(movieId) {\n  const response = await axiosTMDB.get(`${MOVIE_DETAILS}${movieId}`);\n  return response.data;\n}\n\nexport async function fetchMovieCredits(movieId) {\n  const response = await axiosTMDB.get(\n    `${MOVIE_DETAILS}${movieId}${MOVIE_CREDITS}`\n  );\n  return response.data;\n}\n\nexport async function fetchMovieReviews(movieId) {\n  const response = await axiosTMDB.get(\n    `${MOVIE_DETAILS}${movieId}${MOVIE_REVIEWS}`\n  );\n  return response.data;\n}\n","import styled from 'styled-components';\n\nexport const ErrorMessage = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  padding: ${p => p.theme.spacing(4)};\n  background-color: ${p => p.theme.colors.primaryColor};\n  border: 2px solid ${p => p.theme.colors.secondaryColor};\n  border-radius: ${p => p.theme.radius};\n  font-size: 24px;\n  font-weight: 700;\n  color: ${p => p.theme.colors.errorColor};\n`;\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  display: grid;\n  max-width: calc(100vw - 48px);\n  grid-template-columns: repeat(auto-fill, minmax(320px, 1fr));\n  grid-gap: ${p => p.theme.spacing(4)};\n`;\n","import styled from 'styled-components';\n\nexport const MovieContainer = styled.div`\n  position: relative;\n  overflow: hidden;\n  height: 240px;\n  padding: ${p => p.theme.spacing(0.5)};\n  border: 2px solid ${p => p.theme.colors.secondaryColor};\n  background-color: ${p => p.theme.colors.primaryColor};\n  border-radius: ${p => p.theme.radius};\n\n  /* background-image: linear-gradient(\n    to bottom,\n    rgba(1, 180, 228, 0.5),\n    rgba(144, 206, 161, 0.5)\n  ); */\n\n  transition: all ${p => p.theme.transition};\n\n  &:hover {\n    border-color: ${p => p.theme.colors.secondaryColor};\n    box-shadow: ${p => p.theme.shadow};\n    transform: scale(1.03);\n    cursor: pointer;\n  }\n`;\n\nexport const MoviePoster = styled.img`\n  width: 100%;\n  height: 228px;\n  border-radius: ${p => p.theme.radius};\n  object-fit: cover;\n`;\n\nexport const MovieInfo = styled.div`\n  position: absolute;\n  display: flex;\n  flex-direction: column;\n  align-items: baseline;\n  justify-content: space-between;\n  padding: ${p => p.theme.spacing(1)};\n  min-height: 80px;\n  z-index: 1;\n  bottom: 0;\n  left: 0;\n  color: ${p => p.theme.colors.hoverColor};\n  font-size: 18px;\n  width: 100%;\n  background-color: rgb(13, 37, 63, 0.5);\n`;\n\nexport const AdditionalInfo = styled.div`\n  display: flex;\n  width: 100%;\n  justify-content: space-between;\n  align-items: center;\n`;\n\nexport const Score = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  gap: ${p => p.theme.spacing(1)};\n`;\n","import { Link } from 'react-router-dom';\nimport { BiSolidLike } from 'react-icons/bi';\nimport {\n  MovieContainer,\n  MoviePoster,\n  MovieInfo,\n  AdditionalInfo,\n  Score,\n} from './MoviesListItem.styled';\n\nexport const MoviesListItem = ({\n  movie: { id, title, backdrop_path, poster_path, release_date, vote_average },\n  location,\n}) => {\n  const releaseYear = release_date.slice(0, 4);\n  const userScore = Math.round(vote_average * 10);\n  const posterUrl = backdrop_path\n    ? `https://image.tmdb.org/t/p/w500${backdrop_path}`\n    : `https://image.tmdb.org/t/p/w500${poster_path}`;\n\n  return (\n    <Link to={`/movies/${id}`} state={{ from: location }}>\n      <MovieContainer>\n        {(backdrop_path || poster_path) && (\n          <MoviePoster src={posterUrl} alt={title} loading=\"lazy\" />\n        )}\n\n        <MovieInfo>\n          <p>{title}</p>\n          <AdditionalInfo>\n            <p>({releaseYear})</p>\n            <Score>\n              <BiSolidLike size={18} />\n              <span>{userScore}%</span>\n            </Score>\n          </AdditionalInfo>\n        </MovieInfo>\n      </MovieContainer>\n    </Link>\n  );\n};\n","import { List } from './MoviesList.styled';\nimport { MoviesListItem } from 'components/MoviesListItem/MoviesListItem';\n\nexport const MoviesList = ({ movies, location }) => {\n  return (\n    <List>\n      {movies.map(movie => (\n        <li key={movie.id}>\n          <MoviesListItem movie={movie} location={location} />\n        </li>\n      ))}\n    </List>\n  );\n};\n","import styled from 'styled-components';\n\nexport const PageTitle = styled.h2`\n  width: 230px;\n  padding: ${p => p.theme.spacing(1)};\n  color: ${p => p.theme.colors.secondaryColor};\n  background-color: ${p => p.theme.colors.primaryColor};\n  border: 2px solid ${p => p.theme.colors.secondaryColor};\n  border-radius: ${p => p.theme.radius};\n  font-size: 24px;\n  font-weight: 700;\n  text-transform: uppercase;\n`;\n","import { useEffect, useState } from 'react';\nimport { useLocation } from 'react-router-dom';\n\nimport { PageTitle } from 'components/Titles/Titles.styled';\nimport { MoviesList } from 'components/MoviesList/MoviesList';\nimport { Loader } from 'components/Loader/Loader';\nimport { ErrorMessage } from 'components/ErrorMessage/ErrorMessage.styled';\n\nimport { fetchTrendingMovies } from 'api/movie-api';\n\n// ========================================================\n\nexport default function Home() {\n  const [trendingMovies, setTrendingMovies] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(false);\n\n  const location = useLocation();\n\n  useEffect(() => {\n    async function getTrendingMovies() {\n      try {\n        setLoading(true);\n        setError(false);\n        const response = await fetchTrendingMovies();\n        const fetchedMovies = response.results;\n        setTrendingMovies(fetchedMovies);\n      } catch (error) {\n        setTrendingMovies([]);\n        setError(true);\n      } finally {\n        setLoading(false);\n      }\n    }\n\n    getTrendingMovies();\n  }, []);\n\n  return (\n    <>\n      {!error && <PageTitle>Trending today</PageTitle>}\n      {loading && <Loader />}\n      {error && (\n        <ErrorMessage>Whoops! Error! Please reload this page!</ErrorMessage>\n      )}\n      {trendingMovies.length > 0 && (\n        <MoviesList movies={trendingMovies} location={location} />\n      )}\n    </>\n  );\n}\n"],"names":["TRENDING_MOVIES","SEARCH_MOVIES","MOVIE_DETAILS","MOVIE_CREDITS","MOVIE_REVIEWS","axiosTMDB","axios","fetchTrendingMovies","_fetchTrendingMovies","apply","arguments","_asyncToGenerator","_regeneratorRuntime","_callee","response","_context","prev","next","get","sent","abrupt","data","stop","fetchSearchMovies","_x","_x2","_fetchSearchMovies","_callee2","movie","page","_context2","concat","fetchMovieDetails","_x3","_fetchMovieDetails","_callee3","movieId","_context3","fetchMovieCredits","_x4","_fetchMovieCredits","_callee4","_context4","fetchMovieReviews","_x5","_fetchMovieReviews","_callee5","_context5","defaults","baseURL","headers","common","ErrorMessage","styled","_templateObject","_taggedTemplateLiteral","p","theme","spacing","colors","primaryColor","secondaryColor","radius","errorColor","List","MovieContainer","transition","shadow","MoviePoster","_templateObject2","MovieInfo","_templateObject3","hoverColor","AdditionalInfo","_templateObject4","Score","_templateObject5","MoviesListItem","_ref","_ref$movie","id","title","backdrop_path","poster_path","release_date","vote_average","location","releaseYear","slice","userScore","Math","round","posterUrl","_jsx","Link","to","state","from","children","_jsxs","src","alt","loading","BiSolidLike","size","MoviesList","movies","map","PageTitle","Home","_useState","useState","_useState2","_slicedToArray","trendingMovies","setTrendingMovies","_useState3","_useState4","setLoading","_useState5","_useState6","error","setError","useLocation","useEffect","_getTrendingMovies","fetchedMovies","results","t0","finish","getTrendingMovies","_Fragment","Loader","length"],"sourceRoot":""}